{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/messages/messages.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport apiService from '../APIservice';\nimport MessageMini from '../search-minis/message-mini/message-mini';\nimport './messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessagesTab() {\n  _s();\n\n  const [messages, changeMessages] = useState([]);\n  const user = useSelector(state => state.user.user);\n  const dispatch = useDispatch();\n\n  function handleClick(album) {\n    dispatch(changeEyedAlbum(album));\n    navigate('/newMessage');\n  }\n\n  useEffect(() => {\n    async function getMessages() {\n      const messageArray = await apiService.getMessages(user);\n      changeMessages(messageArray);\n    }\n\n    getMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"incoming\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incoming Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), messages.map(m => {\n        if (m.toUser === user) return /*#__PURE__*/_jsxDEV(MessageMini, {\n          fromUser: m.fromUser,\n          message: m.message,\n          album: m.album,\n          offeredAlbum: m.offeredAlbum,\n          handleClick: () => handleClick(m.album)\n        }, m.message, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 49\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outgoing\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sent Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), messages.map(m => {\n        if (m.fromUser === user) return /*#__PURE__*/_jsxDEV(MessageMini, {\n          toUser: m.toUser,\n          message: m.message,\n          album: m.album,\n          offeredAlbum: m.offeredAlbum,\n          sent: true\n        }, m.message, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 51\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MessagesTab, \"hXvTTsx/sDdcihpptMp0s/5Ey8k=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MessagesTab;\nexport default MessagesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesTab\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/messages/messages.js"],"names":["useEffect","useState","useSelector","useDispatch","apiService","MessageMini","MessagesTab","messages","changeMessages","user","state","dispatch","handleClick","album","changeEyedAlbum","navigate","getMessages","messageArray","map","m","toUser","fromUser","message","offeredAlbum"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAO,gBAAP;;;AAEA,SAASC,WAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAMQ,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAN,CAAWA,IAArB,CAAxB;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;;AAGA,WAASS,WAAT,CAAsBC,KAAtB,EAA6B;AACzBF,IAAAA,QAAQ,CAACG,eAAe,CAACD,KAAD,CAAhB,CAAR;AACAE,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACD;;AAEHf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,WAAf,GAA8B;AAC1B,YAAMC,YAAY,GAAI,MAAMb,UAAU,CAACY,WAAX,CAAuBP,IAAvB,CAA5B;AACAD,MAAAA,cAAc,CAACS,YAAD,CAAd;AACH;;AACDD,IAAAA,WAAW;AACZ,GANQ,EAMP,EANO,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGT,QAAQ,CAACW,GAAT,CAAaC,CAAC,IAAI;AACf,YAAIA,CAAC,CAACC,MAAF,KAAaX,IAAjB,EAAuB,oBAAO,QAAC,WAAD;AAE9B,UAAA,QAAQ,EAAEU,CAAC,CAACE,QAFkB;AAG9B,UAAA,OAAO,EAAEF,CAAC,CAACG,OAHmB;AAI9B,UAAA,KAAK,EAAEH,CAAC,CAACN,KAJqB;AAK9B,UAAA,YAAY,EAAEM,CAAC,CAACI,YALc;AAM9B,UAAA,WAAW,EAAE,MAAMX,WAAW,CAACO,CAAC,CAACN,KAAH;AANA,WACzBM,CAAC,CAACG,OADuB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQxB,OATF,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGf,QAAQ,CAACW,GAAT,CAAaC,CAAC,IAAI;AACf,YAAIA,CAAC,CAACE,QAAF,KAAeZ,IAAnB,EAAyB,oBAAO,QAAC,WAAD;AAEhC,UAAA,MAAM,EAAEU,CAAC,CAACC,MAFsB;AAGhC,UAAA,OAAO,EAAED,CAAC,CAACG,OAHqB;AAIhC,UAAA,KAAK,EAAEH,CAAC,CAACN,KAJuB;AAKhC,UAAA,YAAY,EAAEM,CAAC,CAACI,YALgB;AAMhC,UAAA,IAAI,EAAE;AAN0B,WAC3BJ,CAAC,CAACG,OADyB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQ1B,OATF,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAtDQhB,W;UAEQJ,W,EACIC,W;;;KAHZG,W;AAwDT,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport apiService from '../APIservice'\r\nimport MessageMini from '../search-minis/message-mini/message-mini'\r\nimport './messages.css'\r\n\r\nfunction MessagesTab () {\r\n    const [messages, changeMessages] = useState([])\r\n    const user = useSelector(state => state.user.user)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    function handleClick (album) {\r\n        dispatch(changeEyedAlbum(album))\r\n        navigate('/newMessage');\r\n      }\r\n\r\n    useEffect(() => {\r\n      async function getMessages () {\r\n          const messageArray =  await apiService.getMessages(user)\r\n          changeMessages(messageArray)\r\n      }\r\n      getMessages()\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"messages-container\">\r\n            <div className=\"incoming\">\r\n              <h1>Incoming Messages</h1>\r\n              {messages.map(m => {\r\n                  if (m.toUser === user) return <MessageMini \r\n                  key={m.message} \r\n                  fromUser={m.fromUser}\r\n                  message={m.message}\r\n                  album={m.album}\r\n                  offeredAlbum={m.offeredAlbum}\r\n                  handleClick={() => handleClick(m.album)}\r\n                  />\r\n                }\r\n              )}\r\n            </div>\r\n            <div className=\"outgoing\">\r\n              <h1>Sent Messages</h1>\r\n              {messages.map(m => {\r\n                  if (m.fromUser === user) return <MessageMini\r\n                  key={m.message} \r\n                  toUser={m.toUser}\r\n                  message={m.message}\r\n                  album={m.album}\r\n                  offeredAlbum={m.offeredAlbum}\r\n                  sent={true}\r\n                  />\r\n                }\r\n              )}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default MessagesTab"]},"metadata":{},"sourceType":"module"}