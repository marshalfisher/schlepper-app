{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/login/login.js\",\n    _s = $RefreshSig$();\n\nimport { authFalse, authTrue, changeUser, changePass } from '../actions';\nimport { connect } from 'react-redux';\nimport apiService from '../APIservice';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: '',\n  password: ''\n};\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    user,\n    password,\n    changeUser,\n    changePass\n  } = _ref;\n  const [state, setState] = useState(initialState);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(state => {\n      return { ...state,\n        [name]: value\n      };\n    });\n  };\n\n  async function logAttempt(userObject) {\n    const response = await apiService.login(userObject);\n\n    if (response.confirmed) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          logAttempt({\n            username: user.user,\n            password: password.password\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          value: user.user,\n          onChange: e => {\n            changeUser(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => {\n            changePass(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log In\",\n          className: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n} //map state\n\n\n_s(Login, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    user: state.user,\n    password: state.password\n  };\n}; // map dispatch\n\n\nconst mapDispatchToProps = dispatch => ({\n  authTrue: () => dispatch(authTrue()),\n  authFalse: () => dispatch(authFalse()),\n  changeUser: text => dispatch(changeUser(text)),\n  changePass: text => dispatch(changePass(text))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/login/login.js"],"names":["authFalse","authTrue","changeUser","changePass","connect","apiService","React","useState","initialState","email","password","Login","user","state","setState","handleChange","event","name","value","target","logAttempt","userObject","response","login","confirmed","e","preventDefault","username","mapStateToProps","auth","mapDispatchToProps","dispatch","text"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA4D,YAA5D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,SAASC,KAAT,OAA0D;AAAA;;AAAA,MAA1C;AAACC,IAAAA,IAAD;AAAOF,IAAAA,QAAP;AAAiBR,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,GAA0C;AAExD,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACC,YAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAL,IAAAA,QAAQ,CAAED,KAAD,IAAW;AAClB,aAAO,EACP,GAAGA,KADI;AAEP,SAACI,IAAD,GAAQC;AAFD,OAAP;AAID,KALO,CAAR;AAMD,GARD;;AAUA,iBAAeE,UAAf,CAA0BC,UAA1B,EAAsC;AACpC,UAAMC,QAAQ,GAAG,MAAMjB,UAAU,CAACkB,KAAX,CAAiBF,UAAjB,CAAvB;;AACA,QAAIC,QAAQ,CAACE,SAAb,EAAuB,CAEtB;AACF;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACnBA,UAAAA,CAAC,CAACC,cAAF;AACAN,UAAAA,UAAU,CAAC;AAACO,YAAAA,QAAQ,EAAEf,IAAI,CAACA,IAAhB;AAAsBF,YAAAA,QAAQ,EAAEA,QAAQ,CAACA;AAAzC,WAAD,CAAV;AACC,SAHL;AAAA,gCAKI;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAEE,IAAI,CAACA,IAJd;AAKE,UAAA,QAAQ,EAAGa,CAAD,IAAO;AACbvB,YAAAA,UAAU,CAACuB,CAAC,CAACN,MAAF,CAASD,KAAV,CAAV;AACD;AAPL;AAAA;AAAA;AAAA;AAAA,gBALJ,eAeI;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,QAAQ,EAAGO,CAAD,IAAO;AACftB,YAAAA,UAAU,CAACsB,CAAC,CAACN,MAAF,CAASD,KAAV,CAAV;AACD;AANH;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAuBI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAoC,UAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCD,C,CAED;;;GAvDSP,K;;KAAAA,K;;AAwDT,MAAMiB,eAAe,GAAIf,KAAD,IAAW;AAC/B,SAAO;AACLgB,IAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADP;AAELjB,IAAAA,IAAI,EAAEC,KAAK,CAACD,IAFP;AAGLF,IAAAA,QAAQ,EAAEG,KAAK,CAACH;AAHX,GAAP;AAKD,CANH,C,CAQE;;;AACA,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxC9B,EAAAA,QAAQ,EAAE,MAAM8B,QAAQ,CAAC9B,QAAQ,EAAT,CADgB;AAExCD,EAAAA,SAAS,EAAE,MAAM+B,QAAQ,CAAC/B,SAAS,EAAV,CAFe;AAGxCE,EAAAA,UAAU,EAAG8B,IAAD,IAAUD,QAAQ,CAAC7B,UAAU,CAAC8B,IAAD,CAAX,CAHU;AAIxC7B,EAAAA,UAAU,EAAG6B,IAAD,IAAUD,QAAQ,CAAC5B,UAAU,CAAC6B,IAAD,CAAX;AAJU,CAAf,CAA3B;;AAOA,eAAe5B,OAAO,CACpBwB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbnB,KAHa,CAAf","sourcesContent":["import { authFalse, authTrue, changeUser, changePass } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport apiService from '../APIservice';\r\nimport React, { useState } from 'react';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nfunction Login ({user, password, changeUser, changePass}) {\r\n  \r\n  const [state, setState] = useState(initialState);\r\n   \r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState((state) => {\r\n      return {\r\n      ...state,\r\n      [name]: value,\r\n      }\r\n    });\r\n  };\r\n\r\n  async function logAttempt(userObject) {\r\n    const response = await apiService.login(userObject)\r\n    if (response.confirmed){\r\n\r\n    }\r\n  } \r\n\r\n  return (\r\n      <div className=\"container\">\r\n          <div className=\"login\">\r\n              <h2>Log In</h2>\r\n              <form onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  logAttempt({username: user.user, password: password.password})\r\n                  }\r\n              }>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    value={user.user}\r\n                    onChange={(e) => {\r\n                        changeUser(e.target.value)\r\n                      }\r\n                  }\r\n                  />\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={(e) => {\r\n                      changePass(e.target.value)\r\n                    }}\r\n                  />\r\n                  <input type=\"submit\" value=\"Log In\" className=\"button\"/>\r\n             </form>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n//map state\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.auth,\r\n      user: state.user,\r\n      password: state.password\r\n    };\r\n  };\r\n  \r\n  // map dispatch\r\n  const mapDispatchToProps = (dispatch) => ({\r\n    authTrue: () => dispatch(authTrue()),\r\n    authFalse: () => dispatch(authFalse()),\r\n    changeUser: (text) => dispatch(changeUser(text)),\r\n    changePass: (text) => dispatch(changePass(text))\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Login);"]},"metadata":{},"sourceType":"module"}