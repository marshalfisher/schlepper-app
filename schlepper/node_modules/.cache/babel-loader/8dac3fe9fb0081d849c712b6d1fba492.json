{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/profile/profile.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport apiService from '../APIservice';\nimport './profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialData = {\n  username: \"Username\",\n  city: \"City\",\n  state: \"State\"\n};\n\nfunction Profile(username) {\n  _s();\n\n  const user = useSelector(state => state.user.user);\n  console.log(user);\n  console.log(username);\n  const [userData, changeUserData] = useState(initialData);\n  const [image, changeImage] = useState(null);\n  const [path, changePath] = useState('../../public/uploads/cowboy.png');\n\n  function handleChange(e) {\n    changeImage(e.target.files[0]);\n    console.log(e.target.files[0]);\n  }\n\n  async function handleClick(e) {\n    e.preventDefault();\n\n    try {\n      const tag = image.name.slice(-3);\n\n      if (tag === 'png' || tag === 'jpg' || tag === 'gif') {\n        const response = await apiService.sendImage(image);\n\n        if (response) {}\n      } else alert('image format not supported');\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  useEffect(() => {\n    async function getUserInfo() {\n      const resUserData = await apiService.getUser(username);\n      changeUserData(resUserData);\n    }\n\n    getUserInfo();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/uploads/${userData.photo}`,\n      alt: \"profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), user == username.username && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"City: \", userData.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"State: \", userData.state.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"zaGtrbmeIinKOi9cdx31Ay8mt8A=\", false, function () {\n  return [useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/profile/profile.js"],"names":["useEffect","useState","useSelector","apiService","initialData","username","city","state","Profile","user","console","log","userData","changeUserData","image","changeImage","path","changePath","handleChange","e","target","files","handleClick","preventDefault","tag","name","slice","response","sendImage","alert","getUserInfo","resUserData","getUser","photo","toUpperCase"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport apiService from '../APIservice';\r\nimport './profile.css';\r\n\r\nlet initialData = {\r\n    username: \"Username\",\r\n    city: \"City\",\r\n    state: \"State\",\r\n};\r\n\r\nfunction Profile (username) {\r\n     \r\n  const user = useSelector(state => state.user.user)\r\n  console.log(user)\r\n  console.log(username)\r\n    const [userData, changeUserData] = useState(initialData)\r\n    const [image, changeImage] = useState(null)\r\n    const [path, changePath] = useState('../../public/uploads/cowboy.png')\r\n\r\n\r\n    function handleChange (e) {\r\n      changeImage(e.target.files[0])\r\n      console.log(e.target.files[0])\r\n    }\r\n\r\n    async function handleClick (e) {\r\n        e.preventDefault()\r\n        try {\r\n        const tag = image.name.slice(-3)\r\n        if (tag === 'png' || tag === 'jpg' || tag === 'gif') {\r\n          const response = await apiService.sendImage(image)\r\n          if(response) {\r\n\r\n          }\r\n        } else alert('image format not supported');\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getUserInfo () {\r\n            const resUserData = await apiService.getUser(username);\r\n            changeUserData(resUserData)\r\n        }\r\n        \r\n        getUserInfo ()\r\n    }, [username])\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n    \r\n        <img src={`/uploads/${userData.photo}`} alt=\"profile\"/>\r\n        {user == username.username &&\r\n        <div>\r\n          <input type=\"file\" onChange={handleChange}/>\r\n          <button onClick={handleClick}>Submit</button>\r\n        </div>\r\n        }\r\n        <div className=\"profile-info\">\r\n          <h2>{userData.username}</h2>\r\n          <p>City: {userData.city}</p>\r\n          <p>State: {userData.state.toUpperCase()}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile"]},"metadata":{},"sourceType":"module"}