{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\nconst apiService = {}; //logs user in\n\napiService.login = userObject => {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObject)\n  }).then(res => res.json()).catch(err => console.log(err));\n}; //creates a new user\n\n\napiService.createUser = userObject => {\n  return fetch(`${BASE_URL}/new`, {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObject)\n  }).then(res => res.json()).catch(err => console.log(err));\n}; //get album info from Discogs API\n\n\napiService.getAlbumInfo = id => {\n  const sureString = String(id);\n  return fetch(`${BASE_URL}/callAPI`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: sureString\n    })\n  }).then(res => res.json()).catch(err => console.log(err));\n};\n\napiService.search = (query, type) => {\n  const queryObject = {\n    query: String(query),\n    type: String(type)\n  };\n  return fetch(`${BASE_URL}/searchAPI`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(queryObject)\n  }).then(res => res.json()).catch(err => console.log(err));\n}; //removes album from collection\n\n\napiService.removeCollection = object => {\n  console.log(object); //object should look like {id: * record ID*, user: *username*}\n\n  return fetch(`${BASE_URL}/deleteCollection`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(object)\n  }).then(res => res.json()).catch(err => console.log(err));\n};\n\napiService.removeWant = object => {\n  //object should look like {id: * record ID*, user: *username*}\n  return fetch(`${BASE_URL}/deleteWant`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(object)\n  }).then(res => res.json()).catch(err => console.log(err));\n};\n\napiService.addCollection = object => {\n  return fetch(`${BASE_URL}/addCollection`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(object)\n  }).then(res => res.json()).catch(err => console.log(err));\n};\n\napiService.addWant = object => {\n  return fetch(`${BASE_URL}/addWant`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(object)\n  }).then(res => res.json()).catch(err => console.log(err));\n};\n\nexport default apiService;","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/APIservice.js"],"names":["BASE_URL","apiService","login","userObject","fetch","method","credentials","mode","headers","body","JSON","stringify","then","res","json","catch","err","console","log","createUser","getAlbumInfo","id","sureString","String","search","query","type","queryObject","removeCollection","object","removeWant","addCollection","addWant"],"mappings":"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","sourcesContent":["const BASE_URL = 'http://localhost:3001';\r\n\r\nconst apiService = {};\r\n\r\n//logs user in\r\napiService.login = (userObject) => {\r\n    return fetch(`${BASE_URL}/login`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            mode: 'cors',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(userObject),\r\n          })\r\n            .then((res) => res.json())\r\n            .catch((err) => console.log(err));\r\n}\r\n\r\n//creates a new user\r\napiService.createUser = (userObject) => {\r\n  return fetch(`${BASE_URL}/new`, {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    mode: 'cors',\r\n    headers: { \r\n      'Content-Type': 'application/json',\r\n    },\r\n      body: JSON.stringify(userObject),\r\n    })\r\n      .then((res) => res.json())\r\n      .catch((err) => console.log(err));\r\n}\r\n\r\n//get album info from Discogs API\r\napiService.getAlbumInfo = (id) => {\r\n  const sureString = String(id);\r\n  return fetch(`${BASE_URL}/callAPI`, {\r\n    method: 'POST',\r\n    headers: { \r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({id: sureString})\r\n  })\r\n  .then((res) => res.json())\r\n  .catch((err) => console.log(err));\r\n}\r\n\r\napiService.search = (query, type) => {\r\n  const queryObject = {\r\n    query: String(query),\r\n    type: String(type)\r\n  }\r\n  return fetch(`${BASE_URL}/searchAPI`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(queryObject)\r\n  })\r\n  .then((res) => res.json())\r\n  .catch((err)=> console.log(err));\r\n}\r\n\r\n//removes album from collection\r\napiService.removeCollection = (object) =>{\r\n  console.log(object)\r\n  //object should look like {id: * record ID*, user: *username*}\r\n  return fetch(`${BASE_URL}/deleteCollection`, {\r\n    method: 'DELETE',\r\n    headers: { \r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(object)\r\n  })\r\n  .then((res) => res.json())\r\n  .catch((err) => console.log(err));\r\n}\r\n\r\napiService.removeWant = (object) =>{\r\n  //object should look like {id: * record ID*, user: *username*}\r\n  return fetch(`${BASE_URL}/deleteWant`, {\r\n    method: 'DELETE',\r\n    headers: { \r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(object)\r\n  })\r\n  .then((res) => res.json())\r\n  .catch((err) => console.log(err));\r\n}\r\n\r\napiService.addCollection = (object) => {\r\n  return fetch(`${BASE_URL}/addCollection`, {\r\n    method: 'POST',\r\n    headers : {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(object)\r\n  })\r\n  .then((res) => res.json())\r\n  .catch((err) => console.log(err))\r\n}\r\n\r\napiService.addWant = (object) => {\r\n  return fetch(`${BASE_URL}/addWant`, {\r\n    method: 'POST',\r\n    headers : {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(object)\r\n  })\r\n  .then((res) => res.json())\r\n  .catch((err) => console.log(err))\r\n}\r\n\r\nexport default apiService"]},"metadata":{},"sourceType":"module"}