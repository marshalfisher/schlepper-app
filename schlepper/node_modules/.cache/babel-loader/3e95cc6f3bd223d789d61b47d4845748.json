{"ast":null,"code":"import { combineReducers } from 'redux'; //redux state\n\nconst initialState = {\n  auth: false,\n  user: null,\n  password: null\n}; //reducer to authenticate\n\nconst auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'AUTH_TRUE':\n      {\n        return { ...state,\n          auth: true\n        };\n      }\n\n    case 'AUTH_FALSE':\n      {\n        return { ...state,\n          auth: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.user;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_USER':\n      {\n        console.log('changing user now');\n        return { ...state,\n          user: action.text\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst password = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.password;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_PASS':\n      {\n        return { ...state,\n          password: action.text\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // Combining both reducers\n\n\nconst reducers = combineReducers({\n  auth,\n  user\n});\nexport default reducers;","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/reducers.js"],"names":["combineReducers","initialState","auth","user","password","state","action","type","console","log","text","reducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB,C,CAMA;;AACA,MAAMF,IAAI,GAAG,YAAuC;AAAA,MAAtCG,KAAsC,uEAA9BJ,YAAY,CAACC,IAAiB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,WAAL;AAAmB;AACf,eAAO,EACH,GAAGF,KADA;AAEHH,UAAAA,IAAI,EAAE;AAFH,SAAP;AAGE;;AAEN,SAAK,YAAL;AAAoB;AAClB,eAAO,EACH,GAAGG,KADA;AAEHH,UAAAA,IAAI,EAAE;AAFH,SAAP;AAGE;;AACJ;AAAU,aAAOG,KAAP;AAZV;AAcD,CAfD;;AAiBA,MAAMF,IAAI,GAAG,YAAsC;AAAA,MAArCE,KAAqC,uEAA7BJ,YAAY,CAACE,IAAgB;AAAA,MAAVG,MAAU;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAmB;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACE,eAAO,EACH,GAAGJ,KADA;AAEHF,UAAAA,IAAI,EAAEG,MAAM,CAACI;AAFV,SAAP;AAIH;;AACD;AAAU,aAAOL,KAAP;AARhB;AAUD,CAXD;;AAaA,MAAMD,QAAQ,GAAG,YAA0C;AAAA,MAAzCC,KAAyC,uEAAjCJ,YAAY,CAACG,QAAoB;AAAA,MAAVE,MAAU;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAmB;AACX,eAAO,EACH,GAAGF,KADA;AAEHD,UAAAA,QAAQ,EAAEE,MAAM,CAACI;AAFd,SAAP;AAIH;;AACD;AAAU,aAAOL,KAAP;AAPhB;AASD,CAVD,C,CAYA;;;AACA,MAAMM,QAAQ,GAAGX,eAAe,CAAC;AAC/BE,EAAAA,IAD+B;AAE/BC,EAAAA;AAF+B,CAAD,CAAhC;AAKA,eAAeQ,QAAf","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\n//redux state\r\nconst initialState = {\r\n  auth: false,\r\n  user: null,\r\n  password: null,\r\n};\r\n\r\n//reducer to authenticate\r\nconst auth = (state = initialState.auth, action) => {\r\n  switch (action.type) {\r\n  case 'AUTH_TRUE' : {\r\n      return {\r\n          ...state,\r\n          auth: true,\r\n      }}\r\n\r\n  case 'AUTH_FALSE' : {\r\n    return {\r\n        ...state,\r\n        auth: false,\r\n    }}\r\n  default : return state;\r\n  }\r\n};\r\n\r\nconst user = (state = initialState.user, action) =>{\r\n  switch (action.type) {\r\n    case 'CHANGE_USER':{\r\n          console.log('changing user now');\r\n            return {\r\n                ...state,\r\n                user: action.text,\r\n            }\r\n        }\r\n        default : return state;\r\n    } \r\n}\r\n\r\nconst password = (state = initialState.password, action) =>{\r\n  switch (action.type) {\r\n    case 'CHANGE_PASS':{\r\n            return {\r\n                ...state,\r\n                password: action.text,\r\n            }\r\n        }\r\n        default : return state;\r\n    } \r\n}\r\n\r\n// Combining both reducers\r\nconst reducers = combineReducers({\r\n  auth,\r\n  user\r\n});\r\n\r\nexport default reducers;\r\n"]},"metadata":{},"sourceType":"module"}