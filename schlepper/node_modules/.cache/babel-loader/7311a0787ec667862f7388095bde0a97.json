{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/login/login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './login.css';\nimport apiService from '../../APIservice';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { authTrue, changeUser, changeCollection, changeWants } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: '',\n  password: '',\n  username: ''\n};\n\nconst Login = () => {\n  _s();\n\n  //state, initial state is outside of Login component\n  const [state, setState] = useState(initialState); //redux\n\n  const dispatch = useAppDispatch(); //tracks inputs in login form\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(state => {\n      return { ...state,\n        [name]: value\n      };\n    });\n  }; //sets user data in redux upon successful log in\n\n\n  async function logAttempt(userObject) {\n    const response = await apiService.login(userObject);\n\n    if (response.confirmed) {\n      const {\n        accessToken,\n        collection,\n        wants\n      } = response;\n      localStorage.setItem('accessToken', accessToken);\n      dispatch(changeUser(userObject.username));\n      dispatch(changeCollection(JSON.parse(collection)));\n      dispatch(changeWants(JSON.parse(wants)));\n      dispatch(authTrue());\n    } else alert('Invalid Username or Password');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          logAttempt(state);\n          setState(initialState);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"username\",\n          placeholder: \"username\",\n          name: \"username\",\n          value: state.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: state.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log In\",\n          className: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"31meiEJTvy27Nygiejb4c2ILpvI=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/login/login.tsx"],"names":["React","useState","apiService","useAppDispatch","authTrue","changeUser","changeCollection","changeWants","initialState","email","password","username","Login","state","setState","dispatch","handleChange","event","name","value","target","logAttempt","userObject","response","login","confirmed","accessToken","collection","wants","localStorage","setItem","JSON","parse","alert","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './login.css';\r\nimport apiService from '../../APIservice';\r\nimport { useAppDispatch } from '../../redux/hooks';\r\nimport { User } from '../../interfaces/User';\r\nimport { authTrue, changeUser, changeCollection, changeWants } from '../../redux/actions';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  username: '',\r\n};\r\n\r\nconst Login: React.FC = () => {\r\n  //state, initial state is outside of Login component\r\n  const [state, setState] = useState<User>(initialState);\r\n\r\n  //redux\r\n  const dispatch = useAppDispatch();\r\n\r\n  //tracks inputs in login form\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { name, value } = event.target;\r\n    setState(state => {\r\n      return {\r\n        ...state,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  //sets user data in redux upon successful log in\r\n  async function logAttempt(userObject: User): Promise<void> {\r\n    const response = await apiService.login(userObject);\r\n    if (response.confirmed) {\r\n      const { accessToken, collection, wants } = response;\r\n      localStorage.setItem('accessToken', accessToken);\r\n      dispatch(changeUser(userObject.username));\r\n      dispatch(changeCollection(JSON.parse(collection)));\r\n      dispatch(changeWants(JSON.parse(wants)));\r\n      dispatch(authTrue());\r\n    } else alert('Invalid Username or Password');\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='login'>\r\n        <h2>Log In</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            logAttempt(state);\r\n            setState(initialState);\r\n          }}\r\n        >\r\n          <input\r\n            type='username'\r\n            placeholder='username'\r\n            name='username'\r\n            value={state.username}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={state.password}\r\n            onChange={handleChange}\r\n          />\r\n          <input type='submit' value='Log In' className='button' />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}