{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/dashboard/dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport MiniAlbum from '../album-mini/album-mini';\nimport apiService from '../../APIservice';\nimport './dashboard.css';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { changeCollection, changeWants } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  //redux\n  const username = useAppSelector(state => state.user);\n  let collection = useAppSelector(state => state.collection.collection);\n  let wants = useAppSelector(state => state.wants.wants);\n  const dispatch = useAppDispatch(); //deletes single item from user collection\n\n  async function deleteCollection(username, album) {\n    const newCollection = await apiService.removeCollection({\n      username,\n      album\n    });\n    dispatch(changeCollection(newCollection));\n  } //deletes single item from user wants\n\n\n  async function deleteWant(username, album) {\n    const newWants = await apiService.removeWant({\n      username,\n      album\n    });\n    dispatch(changeWants(newWants));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Collection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), collection.map(a => /*#__PURE__*/_jsxDEV(MiniAlbum, {\n        albumID: a,\n        username: username,\n        handleClick: deleteCollection,\n        clickValue: \"Remove\"\n      }, a, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Wants\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Wants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), wants.map(a => /*#__PURE__*/_jsxDEV(MiniAlbum, {\n        albumID: a,\n        username: username,\n        handleClick: deleteWant,\n        clickValue: \"Remove\"\n      }, a, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"Jd4Qhn8t+zy1Hza3aaR/zBqTOok=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppDispatch];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/dashboard/dashboard.tsx"],"names":["MiniAlbum","apiService","useAppSelector","useAppDispatch","changeCollection","changeWants","Dashboard","username","state","user","collection","wants","dispatch","deleteCollection","album","newCollection","removeCollection","deleteWant","newWants","removeWant","map","a"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,iBAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,mBAA/C;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,qBAA9C;;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAChC;AAEA,QAAMC,QAAQ,GAAGL,cAAc,CAASM,KAAK,IAAIA,KAAK,CAACC,IAAxB,CAA/B;AACA,MAAIC,UAAU,GAAGR,cAAc,CAAWM,KAAK,IAAIA,KAAK,CAACE,UAAN,CAAiBA,UAArC,CAA/B;AACA,MAAIC,KAAK,GAAGT,cAAc,CAAWM,KAAK,IAAIA,KAAK,CAACG,KAAN,CAAYA,KAAhC,CAA1B;AACA,QAAMC,QAAQ,GAAGT,cAAc,EAA/B,CANgC,CAQhC;;AACA,iBAAeU,gBAAf,CAAgCN,QAAhC,EAAkDO,KAAlD,EAAgF;AAC9E,UAAMC,aAAa,GAAG,MAAMd,UAAU,CAACe,gBAAX,CAA4B;AAAET,MAAAA,QAAF;AAAYO,MAAAA;AAAZ,KAA5B,CAA5B;AACAF,IAAAA,QAAQ,CAACR,gBAAgB,CAACW,aAAD,CAAjB,CAAR;AACD,GAZ+B,CAchC;;;AACA,iBAAeE,UAAf,CAA0BV,QAA1B,EAA4CO,KAA5C,EAA0E;AACxE,UAAMI,QAAQ,GAAG,MAAMjB,UAAU,CAACkB,UAAX,CAAsB;AAAEZ,MAAAA,QAAF;AAAYO,MAAAA;AAAZ,KAAtB,CAAvB;AACAF,IAAAA,QAAQ,CAACP,WAAW,CAACa,QAAD,CAAZ,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGR,UAAU,CAACU,GAAX,CAAgBC,CAAD,iBACd,QAAC,SAAD;AAEE,QAAA,OAAO,EAAEA,CAFX;AAGE,QAAA,QAAQ,EAAEd,QAHZ;AAIE,QAAA,WAAW,EAAEM,gBAJf;AAKE,QAAA,UAAU,EAAC;AALb,SACOQ,CADP;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGV,KAAK,CAACS,GAAN,CAAWC,CAAD,iBACT,QAAC,SAAD;AAEE,QAAA,OAAO,EAAEA,CAFX;AAGE,QAAA,QAAQ,EAAEd,QAHZ;AAIE,QAAA,WAAW,EAAEU,UAJf;AAKE,QAAA,UAAU,EAAC;AALb,SACOI,CADP;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjDD;;GAAMf,S;UAGaJ,c,EACAA,c,EACLA,c,EACKC,c;;;KANbG,S;AAmDN,eAAeA,SAAf","sourcesContent":["import MiniAlbum from '../album-mini/album-mini';\r\nimport apiService from '../../APIservice';\r\nimport './dashboard.css';\r\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\r\nimport { changeCollection, changeWants } from '../../redux/actions';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  //redux\r\n\r\n  const username = useAppSelector<string>(state => state.user);\r\n  let collection = useAppSelector<string[]>(state => state.collection.collection);\r\n  let wants = useAppSelector<string[]>(state => state.wants.wants);\r\n  const dispatch = useAppDispatch();\r\n\r\n  //deletes single item from user collection\r\n  async function deleteCollection(username: string, album: string): Promise<void> {\r\n    const newCollection = await apiService.removeCollection({ username, album });\r\n    dispatch(changeCollection(newCollection));\r\n  }\r\n\r\n  //deletes single item from user wants\r\n  async function deleteWant(username: string, album: string): Promise<void> {\r\n    const newWants = await apiService.removeWant({ username, album });\r\n    dispatch(changeWants(newWants));\r\n  }\r\n\r\n  return (\r\n    <div className='dashboard'>\r\n      {/* <h2>Hello {username}</h2> */}\r\n      <div className='Collection'>\r\n        <h3>Your Collection</h3>\r\n        {collection.map((a: string) => (\r\n          <MiniAlbum\r\n            key={a}\r\n            albumID={a}\r\n            username={username}\r\n            handleClick={deleteCollection}\r\n            clickValue='Remove'\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className='Wants'>\r\n        <h3>Your Wants</h3>\r\n        {wants.map((a: string) => (\r\n          <MiniAlbum\r\n            key={a}\r\n            albumID={a}\r\n            username={username}\r\n            handleClick={deleteWant}\r\n            clickValue='Remove'\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}