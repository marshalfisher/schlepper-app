{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/map/map.js\",\n    _s = $RefreshSig$();\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport React, { useState, useRef, useCallback } from 'react';\nimport MapGL, { FullscreenControl, GeolocateControl } from 'react-map-gl';\nimport Geocoder from 'react-map-gl-geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    position,\n    onSearchLocation\n  } = _ref;\n  const [viewport, setViewport] = useState({\n    latitude: Number(position.latitude),\n    longitude: Number(position.longitude),\n    zoom: 12.5\n  });\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(newViewport => setViewport(newViewport), []);\n  const handleGeocoderViewportChange = useCallback(newViewport => {\n    const geocoderDefaultOverrides = {\n      transitionDuration: 1000\n    };\n    return handleViewportChange({ ...newViewport,\n      ...geocoderDefaultOverrides\n    });\n  }, []);\n  const fullscreenControlStyle = {\n    right: 10,\n    top: 10\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapGL, {\n      ref: mapRef,\n      ...viewport,\n      width: \"400px\",\n      height: \"400px\",\n      onViewportChange: handleViewportChange,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n      children: [/*#__PURE__*/_jsxDEV(GeolocateControl, {\n        style: {\n          bottom: '-50px'\n        },\n        trackUserLocation: true,\n        showAccuracyCircle: false,\n        auto: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Geocoder, {\n        mapRef: mapRef,\n        onViewportChange: handleGeocoderViewportChange,\n        mapboxApiAccessToken: MAPBOX_TOKEN,\n        position: \"top-left\",\n        placeholder: \"Choose location\",\n        onResult: onSearchLocation // countries='us'\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullscreenControl, {\n        style: fullscreenControlStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"4EfPbzRN7RqbAZ6trEsxVOVpZJg=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/map/map.js"],"names":["React","useState","useRef","useCallback","MapGL","FullscreenControl","GeolocateControl","Geocoder","MAPBOX_TOKEN","Map","position","onSearchLocation","viewport","setViewport","latitude","Number","longitude","zoom","mapRef","handleViewportChange","newViewport","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","fullscreenControlStyle","right","top","margin","bottom"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAO,mDAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,KAAP,IAAgBC,iBAAhB,EAAmCC,gBAAnC,QAA2D,cAA3D;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,YAAY,GAChB,0FADF;;AAGA,MAAMC,GAAG,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAmC;AAC9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AACvCa,IAAAA,QAAQ,EAAEC,MAAM,CAACL,QAAQ,CAACI,QAAV,CADuB;AAEvCE,IAAAA,SAAS,EAAED,MAAM,CAACL,QAAQ,CAACM,SAAV,CAFsB;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;AAMA,QAAMC,MAAM,GAAGhB,MAAM,EAArB;AACA,QAAMiB,oBAAoB,GAAGhB,WAAW,CAACiB,WAAW,IAAIP,WAAW,CAACO,WAAD,CAA3B,EAA0C,EAA1C,CAAxC;AAEA,QAAMC,4BAA4B,GAAGlB,WAAW,CAACiB,WAAW,IAAI;AAC9D,UAAME,wBAAwB,GAAG;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAAjC;AAEA,WAAOJ,oBAAoB,CAAC,EAC1B,GAAGC,WADuB;AAE1B,SAAGE;AAFuB,KAAD,CAA3B;AAID,GAP+C,EAO7C,EAP6C,CAAhD;AASA,QAAME,sBAAsB,GAAG;AAC7BC,IAAAA,KAAK,EAAE,EADsB;AAE7BC,IAAAA,GAAG,EAAE;AAFwB,GAA/B;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAET,MADP;AAAA,SAEMN,QAFN;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,MAAM,EAAC,OAJT;AAKE,MAAA,gBAAgB,EAAEO,oBALpB;AAME,MAAA,oBAAoB,EAAEX,YANxB;AAOE,MAAA,QAAQ,EAAC,mCAPX;AAAA,8BASE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAAEoB,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,iBAAiB,EAAE,IAFrB;AAGE,QAAA,kBAAkB,EAAE,KAHtB;AAIE,QAAA,IAAI;AAJN;AAAA;AAAA;AAAA;AAAA,cATF,eAeE,QAAC,QAAD;AACE,QAAA,MAAM,EAAEV,MADV;AAEE,QAAA,gBAAgB,EAAEG,4BAFpB;AAGE,QAAA,oBAAoB,EAAEb,YAHxB;AAIE,QAAA,QAAQ,EAAC,UAJX;AAKE,QAAA,WAAW,EAAC,iBALd;AAME,QAAA,QAAQ,EAAEG,gBANZ,CAOE;;AAPF;AAAA;AAAA;AAAA;AAAA,cAfF,eAwBE,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAEa;AAA1B;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CArDD;;GAAMf,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["import 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport React, { useState, useRef, useCallback } from 'react';\nimport MapGL, { FullscreenControl, GeolocateControl } from 'react-map-gl';\nimport Geocoder from 'react-map-gl-geocoder';\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst Map = ({ position, onSearchLocation }) => {\n  const [viewport, setViewport] = useState({\n    latitude: Number(position.latitude),\n    longitude: Number(position.longitude),\n    zoom: 12.5,\n  });\n\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(newViewport => setViewport(newViewport), []);\n\n  const handleGeocoderViewportChange = useCallback(newViewport => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\n\n    return handleViewportChange({\n      ...newViewport,\n      ...geocoderDefaultOverrides,\n    });\n  }, []);\n\n  const fullscreenControlStyle = {\n    right: 10,\n    top: 10,\n  };\n  return (\n    <div style={{ margin: '20px' }}>\n      <MapGL\n        ref={mapRef}\n        {...viewport}\n        width='400px'\n        height='400px'\n        onViewportChange={handleViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        mapStyle='mapbox://styles/mapbox/streets-v9'\n      >\n        <GeolocateControl\n          style={{ bottom: '-50px' }}\n          trackUserLocation={true}\n          showAccuracyCircle={false}\n          auto\n        />\n        <Geocoder\n          mapRef={mapRef}\n          onViewportChange={handleGeocoderViewportChange}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          position='top-left'\n          placeholder='Choose location'\n          onResult={onSearchLocation}\n          // countries='us'\n        />\n        <FullscreenControl style={fullscreenControlStyle} />\n      </MapGL>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}