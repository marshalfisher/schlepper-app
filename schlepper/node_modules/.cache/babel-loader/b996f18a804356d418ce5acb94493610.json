{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/messages/messages.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeEyedAlbum, changeViewedUser, changeOffer } from '../actions';\nimport { useNavigate } from 'react-router-dom';\nimport apiService from '../APIservice';\nimport MessageMini from '../search-minis/message-mini/message-mini';\nimport './messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessagesTab() {\n  _s();\n\n  const [messages, changeMessages] = useState([]);\n  const [response, changeResponse] = useState({});\n  const [trading, changeTrading] = useState(false);\n  const user = useSelector(state => state.user.user);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  function handleClick(m) {\n    dispatch(changeViewedUser(m.fromUser));\n    dispatch(changeEyedAlbum(m.album));\n    dispatch(changeOffer(m.offeredAlbum));\n    navigate('/reply');\n  }\n\n  ;\n\n  async function handleDelete(m) {\n    await apiService.deleteMessage(m.id);\n    const messageArray = await apiService.getMessages(user);\n    messageArray.sort(a => a.id);\n    changeMessages(messageArray);\n  }\n\n  ;\n\n  async function handleTrade(m) {\n    const tradeObject = {\n      user1: m.toUser,\n      user2: m.fromUser,\n      user1offer: m.offeredAlbum,\n      user2offer: m.album,\n      location: \"placeholder\",\n      additional: \"placeholder\"\n    };\n    const trade = await apiService.makeTrade(tradeObject);\n    console.log(trade);\n  }\n\n  useEffect(() => {\n    async function getMessages() {\n      const messageArray = await apiService.getMessages(user);\n      messageArray.sort(a => a.id);\n      changeMessages(messageArray);\n    }\n\n    getMessages();\n  }, [response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: trading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"incoming\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Incoming Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), messages.map(m => {\n          if (m.toUser === user) return /*#__PURE__*/_jsxDEV(MessageMini, {\n            fromUser: m.fromUser,\n            message: m.message,\n            album: m.album,\n            offeredAlbum: m.offeredAlbum,\n            handleDelete: () => handleDelete(m),\n            handleClick: () => handleClick(m),\n            handleTrade: () => handleTrade(m)\n          }, m.message, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 47\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outgoing\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sent Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), messages.map(m => {\n          if (m.fromUser === user) return /*#__PURE__*/_jsxDEV(MessageMini, {\n            toUser: m.toUser,\n            message: m.message,\n            album: m.album,\n            offeredAlbum: m.offeredAlbum,\n            sent: true\n          }, m.message, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 49\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MessagesTab, \"+ogbdvmF7uF+/C3WDClVjcvyyHc=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = MessagesTab;\n;\nexport default MessagesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesTab\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/messages/messages.js"],"names":["useEffect","useState","useSelector","useDispatch","changeEyedAlbum","changeViewedUser","changeOffer","useNavigate","apiService","MessageMini","MessagesTab","messages","changeMessages","response","changeResponse","trading","changeTrading","user","state","dispatch","navigate","handleClick","m","fromUser","album","offeredAlbum","handleDelete","deleteMessage","id","messageArray","getMessages","sort","a","handleTrade","tradeObject","user1","toUser","user2","user1offer","user2offer","location","additional","trade","makeTrade","console","log","map","message"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeEyedAlbum, changeViewedUser, changeOffer} from '../actions';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport apiService from '../APIservice';\r\nimport MessageMini from '../search-minis/message-mini/message-mini';\r\nimport './messages.css';\r\n\r\nfunction MessagesTab () {\r\n    const [messages, changeMessages] = useState([]);\r\n    const [response, changeResponse] = useState({});\r\n    const [trading, changeTrading] = useState(false);\r\n    const user = useSelector(state => state.user.user);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n\r\n\r\n    function handleClick (m) {\r\n        dispatch(changeViewedUser(m.fromUser));\r\n        dispatch(changeEyedAlbum(m.album));\r\n        dispatch(changeOffer(m.offeredAlbum));\r\n        navigate('/reply');\r\n      };\r\n\r\n    async function handleDelete (m) {\r\n      await apiService.deleteMessage(m.id);\r\n      const messageArray =  await apiService.getMessages(user);\r\n        messageArray.sort(a => a.id);\r\n        changeMessages(messageArray);\r\n    };\r\n    \r\n    async function handleTrade (m) {\r\n      const tradeObject = {\r\n        user1: m.toUser,\r\n        user2: m.fromUser,\r\n        user1offer: m.offeredAlbum,\r\n        user2offer: m.album,\r\n        location: \"placeholder\",\r\n        additional: \"placeholder\"\r\n      }\r\n      const trade = await apiService.makeTrade(tradeObject);\r\n      console.log(trade)\r\n    }\r\n\r\n    useEffect(() => {\r\n      async function getMessages () {\r\n          const messageArray =  await apiService.getMessages(user);\r\n          messageArray.sort(a => a.id);\r\n          changeMessages(messageArray);\r\n      }\r\n      getMessages();\r\n    },[response]);\r\n\r\n\r\n    return (\r\n      <div className=\"messages-container\">\r\n      {trading &&\r\n      <div>\r\n            <div className=\"incoming\">\r\n              <h1>Incoming Messages</h1>\r\n              {messages.map(m => {\r\n                if (m.toUser === user) return <MessageMini \r\n                key={m.message} \r\n                fromUser={m.fromUser}\r\n                message={m.message}\r\n                album={m.album}\r\n                offeredAlbum={m.offeredAlbum}\r\n                handleDelete={() => handleDelete(m)}\r\n                handleClick={() => handleClick(m)}\r\n                handleTrade={() => handleTrade(m)}\r\n                />\r\n              }\r\n              )}\r\n            </div>\r\n            <div className=\"outgoing\">\r\n              <h1>Sent Messages</h1>\r\n              {messages.map(m => {\r\n                if (m.fromUser === user) return <MessageMini\r\n                key={m.message} \r\n                toUser={m.toUser}\r\n                message={m.message}\r\n                album={m.album}\r\n                offeredAlbum={m.offeredAlbum}\r\n                sent={true}\r\n                />\r\n              }\r\n              )}\r\n            </div>\r\n            </div>\r\n          }\r\n            </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default MessagesTab;"]},"metadata":{},"sourceType":"module"}