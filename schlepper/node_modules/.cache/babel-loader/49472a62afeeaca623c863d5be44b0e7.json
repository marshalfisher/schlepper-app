{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/trades/user-trades/user-trades.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../../redux/hooks';\nimport apiService from '../../../APIservice';\nimport TradeMini from '../trade-mini/trade-mini';\nimport './user-trades.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserTrades = () => {\n  _s();\n\n  //state\n  const [trades, changeTrades] = useState([]); //redux\n\n  const user = useAppSelector(state => state.user); //deletes a trade\n\n  async function handleClick(id) {\n    await apiService.deleteTrade(id);\n    const incomingTrades = await apiService.getTrades(user);\n    if (incomingTrades) changeTrades(incomingTrades);\n  } //gets trades from server on mount\n\n\n  useEffect(() => {\n    async function getTrades() {\n      const incomingTrades = await apiService.getTrades(user);\n      changeTrades(incomingTrades);\n    }\n\n    getTrades();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-trades-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Active Trades:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), trades.length && trades.map(trade => /*#__PURE__*/_jsxDEV(TradeMini, {\n      tradeInfo: trade,\n      handleClick: () => handleClick(trade.id)\n    }, trade.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTrades, \"LXVvF6VoijBm6oETDr9asx2ewA4=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = UserTrades;\nexport default UserTrades;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTrades\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/trades/user-trades/user-trades.tsx"],"names":["React","useEffect","useState","useAppSelector","apiService","TradeMini","UserTrades","trades","changeTrades","user","state","handleClick","id","deleteTrade","incomingTrades","getTrades","length","map","trade"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC;AACA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBN,QAAQ,CAAU,EAAV,CAAvC,CAFiC,CAGjC;;AACA,QAAMO,IAAI,GAAGN,cAAc,CAASO,KAAK,IAAIA,KAAK,CAACD,IAAxB,CAA3B,CAJiC,CAMjC;;AACA,iBAAeE,WAAf,CAA2BC,EAA3B,EAAsD;AACpD,UAAMR,UAAU,CAACS,WAAX,CAAuBD,EAAvB,CAAN;AACA,UAAME,cAAc,GAAG,MAAMV,UAAU,CAACW,SAAX,CAAqBN,IAArB,CAA7B;AACA,QAAIK,cAAJ,EAAoBN,YAAY,CAACM,cAAD,CAAZ;AACrB,GAXgC,CAajC;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,SAAf,GAA0C;AACxC,YAAMD,cAAc,GAAG,MAAMV,UAAU,CAACW,SAAX,CAAqBN,IAArB,CAA7B;AACAD,MAAAA,YAAY,CAACM,cAAD,CAAZ;AACD;;AACDC,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGR,MAAM,CAACS,MAAP,IACCT,MAAM,CAACU,GAAP,CAAWC,KAAK,iBACd,QAAC,SAAD;AAEE,MAAA,SAAS,EAAEA,KAFb;AAGE,MAAA,WAAW,EAAE,MAAMP,WAAW,CAACO,KAAK,CAACN,EAAP;AAHhC,OACOM,KAAK,CAACN,EADb;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnCD;;GAAMN,U;UAISH,c;;;KAJTG,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAppSelector } from '../../../redux/hooks';\r\nimport apiService from '../../../APIservice';\r\nimport TradeMini from '../trade-mini/trade-mini';\r\nimport { Trade } from '../../../interfaces/Trade';\r\nimport './user-trades.css';\r\n\r\nconst UserTrades: React.FC = () => {\r\n  //state\r\n  const [trades, changeTrades] = useState<Trade[]>([]);\r\n  //redux\r\n  const user = useAppSelector<string>(state => state.user);\r\n\r\n  //deletes a trade\r\n  async function handleClick(id: string): Promise<void> {\r\n    await apiService.deleteTrade(id);\r\n    const incomingTrades = await apiService.getTrades(user);\r\n    if (incomingTrades) changeTrades(incomingTrades);\r\n  }\r\n\r\n  //gets trades from server on mount\r\n  useEffect(() => {\r\n    async function getTrades(): Promise<void> {\r\n      const incomingTrades = await apiService.getTrades(user);\r\n      changeTrades(incomingTrades);\r\n    }\r\n    getTrades();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='user-trades-container'>\r\n      <h1>Active Trades:</h1>\r\n      {trades.length &&\r\n        trades.map(trade => (\r\n          <TradeMini\r\n            key={trade.id}\r\n            tradeInfo={trade}\r\n            handleClick={() => handleClick(trade.id)}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTrades;\r\n"]},"metadata":{},"sourceType":"module"}