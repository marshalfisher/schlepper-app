{"ast":null,"code":"import { combineReducers } from 'redux'; //reducer to authenticate\n\nconst auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'AUTH_TRUE':\n      {\n        return { ...state,\n          auth: true\n        };\n      }\n\n    case 'AUTH_FALSE':\n      {\n        return { ...state,\n          auth: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_USER':\n      {\n        return { ...state,\n          user: action.text\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // Combining both reducers\n\n\nconst reducers = combineReducers({\n  auth,\n  user\n});\nexport default reducers;","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/reducers.js"],"names":["combineReducers","auth","state","action","type","user","text","reducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,MAAMC,IAAI,GAAG,YAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,WAAL;AAAmB;AACf,eAAO,EACH,GAAGF,KADA;AAEHD,UAAAA,IAAI,EAAE;AAFH,SAAP;AAGE;;AAEN,SAAK,YAAL;AAAoB;AAClB,eAAO,EACH,GAAGC,KADA;AAEHD,UAAAA,IAAI,EAAE;AAFH,SAAP;AAGE;;AACJ;AAAU,aAAOC,KAAP;AAZV;AAcD,CAfD;;AAiBA,MAAMG,IAAI,GAAG,YAAuB;AAAA,MAAtBH,KAAsB,uEAAd,EAAc;AAAA,MAAVC,MAAU;;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAmB;AACX,eAAO,EACH,GAAGF,KADA;AAEHG,UAAAA,IAAI,EAAEF,MAAM,CAACG;AAFV,SAAP;AAIH;;AACD;AAAU,aAAOJ,KAAP;AAPhB;AASD,CAVD,C,CAcA;;;AACA,MAAMK,QAAQ,GAAGP,eAAe,CAAC;AAC/BC,EAAAA,IAD+B;AAE/BI,EAAAA;AAF+B,CAAD,CAAhC;AAKA,eAAeE,QAAf","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\n//reducer to authenticate\r\nconst auth = (state = false, action) => {\r\n  switch (action.type) {\r\n  case 'AUTH_TRUE' : {\r\n      return {\r\n          ...state,\r\n          auth: true,\r\n      }}\r\n\r\n  case 'AUTH_FALSE' : {\r\n    return {\r\n        ...state,\r\n        auth: false,\r\n    }}\r\n  default : return state;\r\n  }\r\n};\r\n\r\nconst user = (state = '', action) =>{\r\n  switch (action.type) {\r\n    case 'CHANGE_USER':{\r\n            return {\r\n                ...state,\r\n                user: action.text,\r\n            }\r\n        }\r\n        default : return state;\r\n    } \r\n}\r\n\r\n\r\n\r\n// Combining both reducers\r\nconst reducers = combineReducers({\r\n  auth,\r\n  user,\r\n});\r\n\r\nexport default reducers;\r\n"]},"metadata":{},"sourceType":"module"}