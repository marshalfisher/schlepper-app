{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/search-minis/message-mini/message-mini.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport apiService from '../../../APIservice';\nimport './message-mini.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageMini = _ref => {\n  _s();\n\n  let {\n    fromUser,\n    toUser,\n    album,\n    offeredAlbum,\n    message,\n    sent,\n    handleClick,\n    handleDelete,\n    handleTrade\n  } = _ref;\n  //state\n  const initialState = {\n    title: '',\n    artist: '',\n    picURL: ''\n  };\n  const [albumInfo, setAlbumInfo] = useState(initialState);\n  const [offeredAlbumInfo, setOfferedAlbumInfo] = useState(initialState);\n  useEffect(() => {\n    async function getAlbumInfo() {\n      const info = await apiService.getAlbumInfo(album);\n\n      if (info) {\n        setAlbumInfo({\n          title: info.title,\n          artist: info.artists_sort,\n          picURL: info.thumb\n        });\n      }\n\n      const offeredAlbumInfo = await apiService.getAlbumInfo(offeredAlbum);\n\n      if (offeredAlbumInfo) {\n        setOfferedAlbumInfo({\n          title: offeredAlbumInfo.title,\n          artist: offeredAlbumInfo.artists_sort,\n          picURL: offeredAlbumInfo.thumb\n        });\n      }\n    }\n\n    getAlbumInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mini-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: albumInfo.picURL,\n      alt: \"Album Cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [toUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"To: \", toUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this), fromUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"From: \", fromUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Trading: \", albumInfo.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"For: \", offeredAlbumInfo.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Message: \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), !sent && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTrade,\n          children: \"Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageMini, \"VVMuxdYevtwru3cv1s1dSsNdO+0=\");\n\n_c = MessageMini;\nexport default MessageMini;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageMini\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/search-minis/message-mini/message-mini.tsx"],"names":["useEffect","useState","apiService","MessageMini","fromUser","toUser","album","offeredAlbum","message","sent","handleClick","handleDelete","handleTrade","initialState","title","artist","picURL","albumInfo","setAlbumInfo","offeredAlbumInfo","setOfferedAlbumInfo","getAlbumInfo","info","artists_sort","thumb"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,oBAAP;;;AAeA,MAAMC,WAA4B,GAAG,QAU/B;AAAA;;AAAA,MAVgC;AACpCC,IAAAA,QADoC;AAEpCC,IAAAA,MAFoC;AAGpCC,IAAAA,KAHoC;AAIpCC,IAAAA,YAJoC;AAKpCC,IAAAA,OALoC;AAMpCC,IAAAA,IANoC;AAOpCC,IAAAA,WAPoC;AAQpCC,IAAAA,YARoC;AASpCC,IAAAA;AAToC,GAUhC;AACJ;AACA,QAAMC,YAAY,GAAG;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE,EAArB;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAArB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAQY,YAAR,CAA1C;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAQY,YAAR,CAAxD;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqB,YAAf,GAA6C;AAC3C,YAAMC,IAAI,GAAG,MAAMpB,UAAU,CAACmB,YAAX,CAAwBf,KAAxB,CAAnB;;AACA,UAAIgB,IAAJ,EAAU;AACRJ,QAAAA,YAAY,CAAC;AACXJ,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KADD;AAEXC,UAAAA,MAAM,EAAEO,IAAI,CAACC,YAFF;AAGXP,UAAAA,MAAM,EAAEM,IAAI,CAACE;AAHF,SAAD,CAAZ;AAKD;;AACD,YAAML,gBAAgB,GAAG,MAAMjB,UAAU,CAACmB,YAAX,CAAwBd,YAAxB,CAA/B;;AACA,UAAIY,gBAAJ,EAAsB;AACpBC,QAAAA,mBAAmB,CAAC;AAClBN,UAAAA,KAAK,EAAEK,gBAAgB,CAACL,KADN;AAElBC,UAAAA,MAAM,EAAEI,gBAAgB,CAACI,YAFP;AAGlBP,UAAAA,MAAM,EAAEG,gBAAgB,CAACK;AAHP,SAAD,CAAnB;AAKD;AACF;;AAEDH,IAAAA,YAAY;AACb,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEJ,SAAS,CAACD,MAApB;AAA4B,MAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGX,MAAM,iBAAI;AAAA,2BAAQA,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cADb,EAEGD,QAAQ,iBAAI;AAAA,6BAAUA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFf,eAGE;AAAA,gCAAaa,SAAS,CAACH,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,4BAASK,gBAAgB,CAACL,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKGN,OAAO,iBAAI;AAAA,iCAAcA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cALd,EAMG,CAACC,IAAD,iBACC;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1DD;;GAAMR,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport apiService from '../../../APIservice';\r\nimport './message-mini.css';\r\nimport { Album } from '../../../interfaces/Album';\r\n\r\ninterface Props {\r\n  fromUser?: string;\r\n  toUser?: string;\r\n  album: string;\r\n  offeredAlbum: string;\r\n  message: string;\r\n  sent?: boolean;\r\n  handleClick?: () => void;\r\n  handleDelete?: () => void;\r\n  handleTrade?: () => void;\r\n}\r\n\r\nconst MessageMini: React.FC<Props> = ({\r\n  fromUser,\r\n  toUser,\r\n  album,\r\n  offeredAlbum,\r\n  message,\r\n  sent,\r\n  handleClick,\r\n  handleDelete,\r\n  handleTrade,\r\n}) => {\r\n  //state\r\n  const initialState = { title: '', artist: '', picURL: '' };\r\n  const [albumInfo, setAlbumInfo] = useState<Album>(initialState);\r\n  const [offeredAlbumInfo, setOfferedAlbumInfo] = useState<Album>(initialState);\r\n\r\n  useEffect(() => {\r\n    async function getAlbumInfo(): Promise<void> {\r\n      const info = await apiService.getAlbumInfo(album);\r\n      if (info) {\r\n        setAlbumInfo({\r\n          title: info.title,\r\n          artist: info.artists_sort,\r\n          picURL: info.thumb,\r\n        });\r\n      }\r\n      const offeredAlbumInfo = await apiService.getAlbumInfo(offeredAlbum);\r\n      if (offeredAlbumInfo) {\r\n        setOfferedAlbumInfo({\r\n          title: offeredAlbumInfo.title,\r\n          artist: offeredAlbumInfo.artists_sort,\r\n          picURL: offeredAlbumInfo.thumb,\r\n        });\r\n      }\r\n    }\r\n\r\n    getAlbumInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='mini-message'>\r\n      <img src={albumInfo.picURL} alt='Album Cover' />\r\n      <div>\r\n        {toUser && <p>To: {toUser}</p>}\r\n        {fromUser && <p>From: {fromUser}</p>}\r\n        <p>Trading: {albumInfo.title}</p>\r\n        <p>For: {offeredAlbumInfo.title}</p>\r\n        {message && <p> Message: {message}</p>}\r\n        {!sent && (\r\n          <div>\r\n            <button onClick={handleTrade}>Trade</button>\r\n            <button onClick={handleClick}>Reply</button>\r\n            <button onClick={handleDelete}>Delete</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageMini;\r\n"]},"metadata":{},"sourceType":"module"}