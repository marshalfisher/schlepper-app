{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/album-mini/album-mini.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport apiService from '../../APIservice';\nimport './album-mini.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MiniAlbum = _ref => {\n  _s();\n\n  let {\n    username,\n    albumID,\n    handleClick,\n    clickValue\n  } = _ref;\n  //state\n  const [artists, setArtists] = useState([]);\n  const [title, setTitle] = useState('');\n  const [label, setLabel] = useState('');\n  const [year, setYear] = useState(0);\n  const [picURL, setPicURL] = useState(''); //gets info on mount\n\n  useEffect(() => {\n    async function getInfo() {\n      const info = await apiService.getAlbumInfo(albumID);\n\n      if (info) {\n        let label;\n\n        if (info.labels) {\n          label = info.labels[0].name;\n        } else label = 'Label'; // setArtists(info.artists_sort);\n        // setTitle(info.title);\n        // setYear(info.year);\n        // setLabel(label);\n        // setPicURL(info.thumb);\n\n      }\n    }\n\n    getInfo();\n  }, [albumID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mini\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: picURL,\n      alt: \"Album Cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title ? title : 'Album'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artists ? artists : 'Artist'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: label ? label : 'Label'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: year ? year : 'Year'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), clickValue && handleClick && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(username, albumID),\n        children: clickValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MiniAlbum, \"WUzb1aX3zWBqZOSA0+VDsvg7soM=\");\n\n_c = MiniAlbum;\nexport default MiniAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiniAlbum\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/album-mini/album-mini.tsx"],"names":["useEffect","useState","apiService","MiniAlbum","username","albumID","handleClick","clickValue","artists","setArtists","title","setTitle","label","setLabel","year","setYear","picURL","setPicURL","getInfo","info","getAlbumInfo","labels","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,kBAAP;;;AASA,MAAMC,SAA0B,GAAG,QAAoD;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA;AAAlC,GAAmD;AACrF;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAS,CAAT,CAAhC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAS,EAAT,CAApC,CANqF,CAQrF;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,OAAf,GAAwC;AACtC,YAAMC,IAAI,GAAG,MAAMjB,UAAU,CAACkB,YAAX,CAAwBf,OAAxB,CAAnB;;AACA,UAAIc,IAAJ,EAAU;AACR,YAAIP,KAAJ;;AACA,YAAIO,IAAI,CAACE,MAAT,EAAiB;AACfT,UAAAA,KAAK,GAAGO,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,IAAvB;AACD,SAFD,MAEOV,KAAK,GAAG,OAAR,CAJC,CAKR;AACA;AACA;AACA;AACA;;AACD;AACF;;AACDM,IAAAA,OAAO;AACR,GAhBQ,EAgBN,CAACb,OAAD,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEW,MAAV;AAAkB,MAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAKN,KAAK,GAAGA,KAAH,GAAW;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIF,OAAO,GAAGA,OAAH,GAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAII,KAAK,GAAGA,KAAH,GAAW;AAApB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAIE,IAAI,GAAGA,IAAH,GAAU;AAAlB;AAAA;AAAA;AAAA;AAAA,cAJF,EAKGP,UAAU,IAAID,WAAd,iBACC;AAAQ,QAAA,OAAO,EAAE,MAAMA,WAAW,CAACF,QAAD,EAAWC,OAAX,CAAlC;AAAA,kBAAwDE;AAAxD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;GAAMJ,S;;KAAAA,S;AA2CN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport apiService from '../../APIservice';\r\nimport './album-mini.css';\r\n\r\ninterface Props {\r\n  username?: any;\r\n  albumID: string;\r\n  handleClick?: (username: string, albumID: string) => void;\r\n  clickValue?: string | undefined;\r\n}\r\n\r\nconst MiniAlbum: React.FC<Props> = ({ username, albumID, handleClick, clickValue }) => {\r\n  //state\r\n  const [artists, setArtists] = useState<string[]>([]);\r\n  const [title, setTitle] = useState<string>('');\r\n  const [label, setLabel] = useState<string>('');\r\n  const [year, setYear] = useState<number>(0);\r\n  const [picURL, setPicURL] = useState<string>('');\r\n\r\n  //gets info on mount\r\n  useEffect(() => {\r\n    async function getInfo(): Promise<void> {\r\n      const info = await apiService.getAlbumInfo(albumID);\r\n      if (info) {\r\n        let label;\r\n        if (info.labels) {\r\n          label = info.labels[0].name;\r\n        } else label = 'Label';\r\n        // setArtists(info.artists_sort);\r\n        // setTitle(info.title);\r\n        // setYear(info.year);\r\n        // setLabel(label);\r\n        // setPicURL(info.thumb);\r\n      }\r\n    }\r\n    getInfo();\r\n  }, [albumID]);\r\n\r\n  return (\r\n    <div className='mini'>\r\n      <img src={picURL} alt='Album Cover' />\r\n      <div className='mini-info'>\r\n        <h2>{title ? title : 'Album'}</h2>\r\n        <p>{artists ? artists : 'Artist'}</p>\r\n        <p>{label ? label : 'Label'}</p>\r\n        <p>{year ? year : 'Year'}</p>\r\n        {clickValue && handleClick && (\r\n          <button onClick={() => handleClick(username, albumID)}>{clickValue}</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniAlbum;\r\n"]},"metadata":{},"sourceType":"module"}