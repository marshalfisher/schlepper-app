{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/profile/profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MiniAlbum from '../album-mini/album-mini';\nimport apiService from '../../APIservice';\nimport './profile.css';\nimport { useNavigate } from 'react-router-dom';\nimport { changeEyedAlbum } from '../../redux/actions';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialData = {\n  username: 'Username',\n  city: 'City',\n  state: 'State',\n  email: ''\n};\n\nconst Profile = username => {\n  _s();\n\n  var _userData$state;\n\n  //state\n  const [userData, changeUserData] = useState(initialData);\n  const [image, changeImage] = useState({\n    name: ''\n  });\n  const [collection, changeCollection] = useState([]);\n  const [wants, changeWants] = useState([]);\n  const [displayedPhoto, changeDisplayedPhoto] = useState(''); //redux\n\n  const user = useAppSelector(state => state.user);\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch(); //sets image to state\n\n  function handleChange(e) {\n    changeImage(e.target.files[0]);\n  } //sends a message to the user\n\n\n  function handleTrade(a) {\n    dispatch(changeEyedAlbum(a));\n    navigate('/newMessage');\n  } //set image as new profile image and save it to /public/uploads folder\n\n\n  async function handleClick(e) {\n    e.preventDefault();\n\n    try {\n      const tag = image.name.slice(-3);\n\n      if (tag === 'png' || tag === 'jpg' || tag === 'gif') {\n        await apiService.sendImage(image);\n        await apiService.updateUser(user, 'photo', image.name);\n        changeDisplayedPhoto(image.name);\n      } else alert('image format not supported');\n    } catch (e) {\n      console.log(e);\n    }\n  } //gets user info on mount\n\n\n  useEffect(() => {\n    async function getUserInfo() {\n      const resUserData = await apiService.getUser(username);\n      changeUserData(resUserData);\n      changeCollection(JSON.parse(resUserData.collection));\n      changeWants(JSON.parse(resUserData.wants));\n      changeDisplayedPhoto(resUserData.photo);\n    }\n\n    getUserInfo();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/uploads/${displayedPhoto}`,\n      alt: \"profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), user == username.username && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"City: \", userData.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"State: \", (_userData$state = userData.state) === null || _userData$state === void 0 ? void 0 : _userData$state.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Collection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [userData.username, \"'s Collection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), collection.map(a => /*#__PURE__*/_jsxDEV(MiniAlbum, {\n          albumID: a,\n          username: username,\n          handleClick: () => handleTrade(a),\n          clickValue: user === username ? undefined : 'Trade'\n        }, a, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Wants\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [userData.username, \"'s Wants\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), wants.map(a => /*#__PURE__*/_jsxDEV(MiniAlbum, {\n          albumID: a,\n          username: username,\n          handleClick: function (username, albumID) {\n            throw new Error('Function not implemented.');\n          },\n          clickValue: undefined\n        }, a, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"WgaHTDOrxP5zZKjp4yI6ZsJGNLE=\", false, function () {\n  return [useAppSelector, useNavigate, useAppDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/profile/profile.tsx"],"names":["React","useEffect","useState","MiniAlbum","apiService","useNavigate","changeEyedAlbum","useAppSelector","useAppDispatch","initialData","username","city","state","email","Profile","userData","changeUserData","image","changeImage","name","collection","changeCollection","wants","changeWants","displayedPhoto","changeDisplayedPhoto","user","navigate","dispatch","handleChange","e","target","files","handleTrade","a","handleClick","preventDefault","tag","slice","sendImage","updateUser","alert","console","log","getUserInfo","resUserData","getUser","JSON","parse","photo","toUpperCase","map","undefined","albumID","Error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MiniAlbum from '../album-mini/album-mini';\r\nimport apiService from '../../APIservice';\r\nimport './profile.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { changeEyedAlbum } from '../../redux/actions';\r\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\r\nimport { User } from '../../interfaces/User';\r\n\r\nlet initialData = {\r\n  username: 'Username',\r\n  city: 'City',\r\n  state: 'State',\r\n  email: '',\r\n};\r\n\r\ninterface Image {\r\n  name: string;\r\n}\r\n\r\ninterface Props {\r\n  username: string;\r\n}\r\n\r\nconst Profile: React.FC<Props> = username => {\r\n  //state\r\n  const [userData, changeUserData] = useState<User>(initialData);\r\n  const [image, changeImage] = useState<Image>({ name: '' });\r\n  const [collection, changeCollection] = useState<string[]>([]);\r\n  const [wants, changeWants] = useState<string[]>([]);\r\n  const [displayedPhoto, changeDisplayedPhoto] = useState<string>('');\r\n\r\n  //redux\r\n  const user = useAppSelector(state => state.user);\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  //sets image to state\r\n  function handleChange(e: any): void {\r\n    changeImage(e.target.files[0]);\r\n  }\r\n\r\n  //sends a message to the user\r\n  function handleTrade(a: string): void {\r\n    dispatch(changeEyedAlbum(a));\r\n    navigate('/newMessage');\r\n  }\r\n\r\n  //set image as new profile image and save it to /public/uploads folder\r\n  async function handleClick(e: React.MouseEvent<HTMLElement>): Promise<void> {\r\n    e.preventDefault();\r\n    try {\r\n      const tag = image.name.slice(-3);\r\n      if (tag === 'png' || tag === 'jpg' || tag === 'gif') {\r\n        await apiService.sendImage(image);\r\n        await apiService.updateUser(user, 'photo', image.name);\r\n        changeDisplayedPhoto(image.name);\r\n      } else alert('image format not supported');\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  //gets user info on mount\r\n  useEffect(() => {\r\n    async function getUserInfo(): Promise<void> {\r\n      const resUserData = await apiService.getUser(username);\r\n      changeUserData(resUserData);\r\n      changeCollection(JSON.parse(resUserData.collection));\r\n      changeWants(JSON.parse(resUserData.wants));\r\n      changeDisplayedPhoto(resUserData.photo);\r\n    }\r\n    getUserInfo();\r\n  }, [username]);\r\n\r\n  return (\r\n    <div className='profile'>\r\n      <img src={`/uploads/${displayedPhoto}`} alt='profile' />\r\n      {user == username.username && (\r\n        <div>\r\n          <input type='file' onChange={handleChange} />\r\n          <button onClick={handleClick}>Submit</button>\r\n        </div>\r\n      )}\r\n      <div className='profile-info'>\r\n        <h2>{userData.username}</h2>\r\n        <p>City: {userData.city}</p>\r\n        <p>State: {userData.state?.toUpperCase()}</p>\r\n        <div className='Collection'>\r\n          <h3>{userData.username}'s Collection</h3>\r\n          {collection.map(a => (\r\n            <MiniAlbum\r\n              key={a}\r\n              albumID={a}\r\n              username={username}\r\n              handleClick={() => handleTrade(a)}\r\n              clickValue={user === username ? undefined : 'Trade'}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className='Wants'>\r\n          <h3>{userData.username}'s Wants</h3>\r\n          {wants.map(a => (\r\n            <MiniAlbum\r\n              key={a}\r\n              albumID={a}\r\n              username={username}\r\n              handleClick={function (username: string, albumID: string): void {\r\n                throw new Error('Function not implemented.');\r\n              }}\r\n              clickValue={undefined}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}