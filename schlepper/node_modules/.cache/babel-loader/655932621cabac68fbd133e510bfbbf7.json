{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/album-mini/album-mini.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCollection, changeWants } from '../actions';\nimport apiService from '../APIservice';\nimport './album-mini.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MiniAlbum(_ref) {\n  _s();\n\n  let {\n    albumID\n  } = _ref;\n  const [artists, setArtists] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [label, setLabel] = useState(\"\");\n  const [year, setYear] = useState(0);\n  const [picURL, setPicURL] = useState(\"\");\n  const username = useSelector(state => state.user.user);\n  const dispatch = useDispatch();\n  getInfo();\n\n  async function getInfo() {\n    const info = await apiService.getAlbumInfo(albumID);\n\n    if (info) {\n      const label = info.labels[0].name ? info.labels[0].name : \"Label\";\n      setArtists(info.artists_sort);\n      setTitle(info.title);\n      setYear(info.year);\n      setLabel(label);\n      setPicURL(info.thumb);\n    }\n  }\n\n  async function deleteCollection() {\n    const newCollection = await apiService.removeCollection({\n      username,\n      albumID\n    });\n    dispatch(changeCollection(newCollection));\n  }\n\n  async function deleteWant() {\n    const newCollection = await apiService.removeCollection({\n      username,\n      albumID\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mini\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: picURL,\n      alt: \"Album Cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title ? title : \"Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artists ? artists : \"Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: label ? label : \"Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: year ? year : \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MiniAlbum, \"SFIkykw6ByfcYABgN/WJ19gIiWs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MiniAlbum;\nexport default MiniAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiniAlbum\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/album-mini/album-mini.js"],"names":["useState","useSelector","useDispatch","changeCollection","changeWants","apiService","MiniAlbum","albumID","artists","setArtists","title","setTitle","label","setLabel","year","setYear","picURL","setPicURL","username","state","user","dispatch","getInfo","info","getAlbumInfo","labels","name","artists_sort","thumb","deleteCollection","newCollection","removeCollection","deleteWant"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { changeCollection, changeWants } from '../actions'\r\n\r\nimport apiService from '../APIservice'\r\nimport './album-mini.css'\r\n\r\n\r\nfunction MiniAlbum ({albumID}) {\r\n  \r\n  const [artists, setArtists] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [label, setLabel] = useState(\"\");\r\n  const [year, setYear] = useState(0);\r\n  const [picURL, setPicURL] = useState(\"\")\r\n\r\n  const username = useSelector(state => state.user.user)\r\n  const dispatch = useDispatch()\r\n\r\n  getInfo()\r\n  \r\n    async function getInfo () {\r\n      const info =  await apiService.getAlbumInfo(albumID)\r\n      if (info) {\r\n        const label = info.labels[0].name? info.labels[0].name : \"Label\"\r\n        setArtists(info.artists_sort);\r\n        setTitle(info.title);\r\n        setYear(info.year);\r\n        setLabel(label);\r\n        setPicURL(info.thumb)\r\n      }\r\n    } \r\n    \r\n    async function deleteCollection() {\r\n      const newCollection = await apiService.removeCollection({username, albumID});\r\n      dispatch(changeCollection(newCollection));\r\n    }\r\n    \r\n    async function deleteWant() {\r\n      const newCollection = await apiService.removeCollection({username, albumID});\r\n\r\n    }\r\n   \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"mini\">\r\n          <img src={picURL} alt=\"Album Cover\"/>\r\n          <div className=\"mini-info\">\r\n            <h2>{title ? title : \"Album\"}</h2>\r\n            <p>{artists ? artists : \"Artist\"}</p>\r\n            <p>{label ? label : \"Label\"}</p>\r\n            <p>{year ? year : \"Year\"}</p>\r\n            <button>Remove</button>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MiniAlbum"]},"metadata":{},"sourceType":"module"}