{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/messages/new-message/new-message.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAppSelector } from '../../../redux/hooks';\nimport MiniAlbum from '../../album-mini/album-mini';\nimport apiService from '../../../APIservice';\nimport './new-message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewMessage() {\n  _s();\n\n  //state\n  const [offeredAlbum, changeOfferedAlbum] = useState('');\n  const [message, changeMessage] = useState('');\n  const [status, changeStatus] = useState(0); //redux\n\n  const toUser = useAppSelector(state => state.viewedUser);\n  const fromUser = useAppSelector(state => state.user);\n  const album = useAppSelector(state => state.eyedAlbum.eyedAlbum);\n  const collection = useAppSelector(state => state.collection.collection); //set message in state\n\n  function handleChange(e) {\n    const message = e.target.value;\n    changeMessage(message);\n  } // submits message to the server\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const messageObject = {\n      toUser,\n      fromUser,\n      album,\n      offeredAlbum,\n      message\n    };\n    const response = await apiService.sendMessage(messageObject);\n    if (response) changeStatus(response.status);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-create\",\n    children: [status === 201 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message Sent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }, this), status !== 0 && status !== 201 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message Failed to Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 42\n    }, this), !status && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"New Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"To : \", toUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"From : \", fromUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Album:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MiniAlbum, {\n        albumID: album\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Offer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), !offeredAlbum && 'Select Album', offeredAlbum && /*#__PURE__*/_jsxDEV(MiniAlbum, {\n        albumID: offeredAlbum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Collection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-collection\",\n          children: collection.map(a => /*#__PURE__*/_jsxDEV(MiniAlbum, {\n            albumID: a,\n            username: fromUser,\n            handleClick: () => changeOfferedAlbum(a),\n            clickValue: \"Offer\"\n          }, a, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Add message...\",\n            name: \"message\",\n            className: \"message-box\",\n            value: message,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Message\",\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewMessage, \"Lh3JLimZYzKXb6kHKkwplxtBkzE=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = NewMessage;\nexport default NewMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"sources":["/mnt/c/Users/marsh/Documents/Codeworks/projects/schlepper-app/schlepper/src/components/messages/new-message/new-message.tsx"],"names":["useState","useAppSelector","MiniAlbum","apiService","NewMessage","offeredAlbum","changeOfferedAlbum","message","changeMessage","status","changeStatus","toUser","state","viewedUser","fromUser","user","album","eyedAlbum","collection","handleChange","e","target","value","handleSubmit","preventDefault","messageObject","response","sendMessage","map","a"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useAppSelector } from '../../../redux/hooks';\r\nimport MiniAlbum from '../../album-mini/album-mini';\r\nimport apiService from '../../../APIservice';\r\nimport './new-message.css';\r\n\r\nfunction NewMessage() {\r\n  //state\r\n  const [offeredAlbum, changeOfferedAlbum] = useState<string>('');\r\n  const [message, changeMessage] = useState<string>('');\r\n  const [status, changeStatus] = useState<number>(0);\r\n\r\n  //redux\r\n  const toUser = useAppSelector<string>(state => state.viewedUser);\r\n  const fromUser = useAppSelector<string>(state => state.user);\r\n  const album = useAppSelector<string>(state => state.eyedAlbum.eyedAlbum);\r\n  const collection = useAppSelector<string[]>(state => state.collection.collection);\r\n\r\n  //set message in state\r\n  function handleChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\r\n    const message = e.target.value;\r\n    changeMessage(message);\r\n  }\r\n\r\n  // submits message to the server\r\n  async function handleSubmit(e: React.FormEvent<HTMLFormElement>): Promise<void> {\r\n    e.preventDefault();\r\n    const messageObject = { toUser, fromUser, album, offeredAlbum, message };\r\n    const response = await apiService.sendMessage(messageObject);\r\n    if (response) changeStatus(response.status);\r\n  }\r\n\r\n  return (\r\n    <div className='message-create'>\r\n      {status === 201 && <h1>Message Sent</h1>}\r\n      {status !== 0 && status !== 201 && <h1>Message Failed to Send</h1>}\r\n      {!status && (\r\n        <div>\r\n          <h1>New Message</h1>\r\n          <h2>To : {toUser}</h2>\r\n          <h2>From : {fromUser}</h2>\r\n          <h2>Album:</h2>\r\n          <MiniAlbum albumID={album} />\r\n          <h2>Your Offer:</h2>\r\n          {!offeredAlbum && 'Select Album'}\r\n          {offeredAlbum && <MiniAlbum albumID={offeredAlbum} />}\r\n          <div className='Collection'>\r\n            <h3>Your Collection</h3>\r\n            <div className='user-collection'>\r\n              {collection.map(a => (\r\n                <MiniAlbum\r\n                  key={a}\r\n                  albumID={a}\r\n                  username={fromUser}\r\n                  handleClick={() => changeOfferedAlbum(a)}\r\n                  clickValue='Offer'\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className='message-input'>\r\n            <form onSubmit={handleSubmit}>\r\n              <textarea\r\n                placeholder='Add message...'\r\n                name='message'\r\n                className='message-box'\r\n                value={message}\r\n                onChange={handleChange}\r\n              />\r\n              <input type='submit' value='Message' className='button' />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewMessage;\r\n"]},"metadata":{},"sourceType":"module"}